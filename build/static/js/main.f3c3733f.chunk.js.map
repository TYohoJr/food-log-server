{"version":3,"sources":["reducers.js","InputForm/InputForm.js","LogIn/LogIn.js","SignUp/SignUp.js","SignInNavbar/SignInNavbar.js","App.js","registerServiceWorker.js","index.js"],"names":["combineReducers","userDetailsReducer","state","action","username","password","verifyPassword","type","Object","objectSpread","loggedInCheckerReducer","loggedInCheck","InputForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","searchAPI","bind","assertThisInitialized","onAPISearchParameterChange","apiSearchParameter","axios","post","token","localStorage","getItem","searchParameter","then","result","data","noToken","alert","message","console","log","e","setState","target","value","react_default","a","createElement","Input","id","placeholder","onChange","Button","onClick","React","Component","connect","LogIn","props","toggle","showPasword","onUsernameChange","onPasswordChange","userLogIn","modal","showPasswordText","_this2","userDetails","myToken","setItem","dispatch","color","Modal","isOpen","className","ModalHeader","ModalBody","ModalFooter","SignUp","onVerifyPasswordChange","userSignUp","length","result2","duplicateCheck","SignInNavbar","userLogOut","clear","window","location","href","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","src_LogIn_LogIn","src_SignUp_SignUp","DropdownItem","divider","store","createStore","reducer","App","es","src_SignInNavbar_SignInNavbar","src_InputForm_InputForm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f3c3733f.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n// import React from \"react\";\n\nconst loggedInCheckerReducer = (state, action) => {\n    if (!state) {\n        state = {\n            loggedInCheck: \"Welcome to Food Log\\nPlease Log In\"\n        }\n    }\n    switch (action.type) {\n        case \"userLoggedIn\":\n            return state = {\n                loggedInCheck: \"Welcome to Food Log!\"\n            }\n        case \"userLoggedOut\":\n            return state = {\n                loggedInCheck: \"Welcome to Food Log\\nPlease Log In\"\n            }\n        default:\n            return state = {\n                ...state\n            }\n    }\n}\n\nconst userDetailsReducer = (state, action) => {\n    if (!state) {\n        state = {\n            username: \"\",\n            password: \"\",\n            verifyPassword: \"\"\n        }\n    }\n    switch (action.type) {\n        case \"onUsernameChange\":\n            return state = {\n                ...state,\n                username: action.username\n            }\n        case \"onPasswordChange\":\n            return state = {\n                ...state,\n                password: action.password\n            }\n        case \"onVerifyPasswordChange\":\n            return state = {\n                ...state,\n                verifyPassword: action.verifyPassword\n            }\n        default:\n            return {\n                ...state\n            }\n    }\n}\n\nexport default combineReducers({\n    userDetailsReducer: userDetailsReducer,\n    loggedInCheckerReducer: loggedInCheckerReducer\n});\n","import React from 'react';\nimport \"./InputForm.css\";\nimport { connect } from 'react-redux';\nimport { Input, Button } from \"reactstrap\";\nimport axios from \"axios\";\n\nclass InputForm extends React.Component {\n    constructor() {\n        super();\n        this.searchAPI = this.searchAPI.bind(this);\n        this.onAPISearchParameterChange = this.onAPISearchParameterChange.bind(this);\n        this.state = {\n            apiSearchParameter: ''\n        }\n    }\n\n    // axios.post('/findRoute', { token: localStorage.getItem(\"token\") }).then((result) => {\n\n    searchAPI() {\n        axios.post(\"/searchAPI\", { token: localStorage.getItem(\"token\"), searchParameter: this.state.apiSearchParameter }).then((result) => {\n            if (result.data.noToken) {\n                alert(result.data.message);\n            } else {\n                console.log(result.data)\n            }\n        })\n        console.log(this.state.apiSearchParameter);\n    }\n\n    onAPISearchParameterChange(e) {\n        this.setState({\n            apiSearchParameter: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Input id=\"api-search-input\" type=\"text\" placeholder=\"search for food\" onChange={this.onAPISearchParameterChange} />\n                <Button onClick={this.searchAPI}>Search</Button>\n            </div>\n        )\n    }\n}\n\nexport default connect((state) => (state))(InputForm);","import React from 'react';\nimport \"./LogIn.css\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport axios from \"axios\";\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.showPasword = this.showPasword.bind(this);\n    this.onUsernameChange = this.onUsernameChange.bind(this);\n    this.onPasswordChange = this.onPasswordChange.bind(this);\n    this.userLogIn = this.userLogIn.bind(this);\n    this.state = {\n      modal: false,\n      showPasswordText: \"password\",\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  userLogIn() {\n    axios.post(\"userLogIn\", { userDetails: this.props.userDetailsReducer }).then((result) => {\n      if (result.data.myToken) {\n        localStorage.setItem('token', result.data.myToken);\n        alert(result.data.message);\n        this.setState({\n          modal: !this.state.modal\n        });\n        this.props.dispatch({\n          type: \"userLoggedIn\"\n        });\n      } else {\n        alert(result.data.message);\n      }\n    })\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  showPasword() {\n    if (this.state.showPasswordText === \"password\") {\n      this.setState({\n        showPasswordText: \"text\"\n      })\n    } else {\n      this.setState({\n        showPasswordText: \"password\"\n      })\n    }\n  }\n\n  onUsernameChange(e) {\n    this.props.dispatch({\n      type: \"onUsernameChange\",\n      username: e.target.value\n    })\n  }\n\n  onPasswordChange(e) {\n    this.props.dispatch({\n      type: \"onPasswordChange\",\n      password: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Button color=\"danger\" onClick={this.toggle}>Log In</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Log In</ModalHeader>\n          <ModalBody>\n            <p>Username:</p>\n            <Input className=\"log-in-input\" type=\"text\" placeholder=\"username\" onChange={this.onUsernameChange} />\n            <p>Password:</p>\n            <Input className=\"log-in-input\" type={this.state.showPasswordText} placeholder=\"password\" onChange={this.onPasswordChange} />\n            <span id=\"checkbox-div\"><Input type=\"checkbox\" onClick={this.showPasword} />{' Show Password '}</span>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.userLogIn}>Log In</Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default connect((state) => (state))(LogIn);","import React from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport \"./SignUp.css\";\nimport axios from \"axios\";\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.onUsernameChange = this.onUsernameChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onVerifyPasswordChange = this.onVerifyPasswordChange.bind(this);\n        this.userSignUp = this.userSignUp.bind(this);\n        this.state = {\n            modal: false\n        };\n    }\n\n    userSignUp() {\n        if (this.props.userDetailsReducer.username.length && this.props.userDetailsReducer.password.length) {\n            if (this.props.userDetailsReducer.password === this.props.userDetailsReducer.verifyPassword) {\n                axios.post(\"userSignUp\", { userDetails: this.props.userDetailsReducer }).then((result) => {\n                    console.log(result.data);\n                    axios.post(\"userLogIn\", { userDetails: this.props.userDetailsReducer }).then((result2) => {\n                        if (result.data.duplicateCheck) {\n                            alert(result.data.message);\n                        } else {\n                            localStorage.setItem('token', result2.data.myToken);\n                            alert(\"You have successfull signed up and have been automatically logged in!\");\n                            this.setState({\n                                modal: !this.state.modal\n                            });\n                        }\n                    })\n                })\n            } else {\n                alert(\"Passwords don't match!\");\n            }\n        } else {\n            alert(\"Username and/or Passsword can't be blank\");\n        }\n    }\n\n    toggle() {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onUsernameChange(e) {\n        this.props.dispatch({\n            type: \"onUsernameChange\",\n            username: e.target.value\n        })\n    }\n\n    onPasswordChange(e) {\n        this.props.dispatch({\n            type: \"onPasswordChange\",\n            password: e.target.value\n        })\n    }\n\n    onVerifyPasswordChange(e) {\n        this.props.dispatch({\n            type: \"onVerifyPasswordChange\",\n            verifyPassword: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button color=\"danger\" onClick={this.toggle}>Sign Up</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n                    <ModalHeader toggle={this.toggle}>Sign Up</ModalHeader>\n                    <ModalBody>\n                        <p>Username:</p>\n                        <Input type=\"text\" placeholder=\"username\" onChange={this.onUsernameChange} />\n                        <p>Password:</p>\n                        <Input type=\"password\" placeholder=\"password\" onChange={this.onPasswordChange} />\n                        <p>Re-Type Password:</p>\n                        <Input type=\"password\" placeholder=\"re-type password\" onChange={this.onVerifyPasswordChange} />\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={this.userSignUp}>Sign Up</Button>{' '}\n                        <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(SignUp);","import React from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    Nav,\n    // NavItem,\n    // NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport \"./SignInNavbar.css\";\nimport { connect } from 'react-redux';\nimport LogIn from \"../LogIn/LogIn\";\nimport SignUp from \"../SignUp/SignUp\";\n\nclass SignInNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.userLogOut = this.userLogOut.bind(this);\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    userLogOut() {\n        localStorage.clear();\n        this.props.dispatch({\n            type: \"userLoggedOut\"\n        })\n        window.location.href = '/'\n    }\n    render() {\n        if (localStorage.getItem(\"token\")) {\n            console.log(\"logged in\");\n        } else {\n            console.log(\"not logged in\");\n        }\n        return (\n            <div>\n                <Navbar color=\"light\" light expand=\"md\">\n                    <h3>{this.props.loggedInCheckerReducer.loggedInCheck}</h3>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            {/* <NavItem>\n                                <NavLink href=\"/components/\">Components</NavLink>\n                            </NavItem> */}\n                            <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret>\n                                    Account\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    {/* <DropdownItem onClick={this.userLogIn}> */}\n                                    <LogIn />\n                                    {/* </DropdownItem> */}\n                                    {/* <DropdownItem> */}\n                                    <SignUp />\n                                    {/* </DropdownItem> */}\n                                    <DropdownItem divider />\n                                    <DropdownItem onClick={this.userLogOut}>\n                                        Log Out\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    }\n}\n\nexport default connect((state) => (state))(SignInNavbar);","import React, { Component } from 'react';\nimport './App.css';\nimport reducer from \"./reducers\";\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport InputForm from \"./InputForm/InputForm\";\nimport SignInNavbar from \"./SignInNavbar/SignInNavbar\";\n\nconst store = createStore(reducer);\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store} >\n        <div className=\"App\">\n          <SignInNavbar />\n          <h2 id=\"app-header\">Food Log</h2>\n          <InputForm />\n        </div>\n      </Provider>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}